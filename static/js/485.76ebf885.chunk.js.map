{"version":3,"file":"static/js/485.76ebf885.chunk.js","mappings":"0NAEaA,EAAcC,EAAAA,EAAAA,GAAH,gLAUXC,EAAQD,EAAAA,EAAAA,EAAH,uKAULE,EAASF,EAAAA,EAAAA,OAAH,wSAgBNG,EAAcH,EAAAA,EAAAA,IAAH,wJAMX,SAAAI,GAAK,OAAKA,EAAMC,WAAa,OAAS,GAAjC,IACI,SAAAD,GAAK,OAAKA,EAAMC,WAAa,YAAc,MAAtC,IAGdC,EAAWN,EAAAA,EAAAA,GAAH,6LAGJ,SAAAI,GAAK,OAAKA,EAAMC,WAAa,MAAQ,KAAhC,IAIN,SAAAD,GAAK,OAAKA,EAAMC,WAAa,SAAW,OAAnC,IAGRE,EAAaP,EAAAA,EAAAA,IAAH,wL,SC/CVQ,EAAO,SAAC,GAAqB,IAAnBC,EAAkB,EAAlBA,KAAMC,EAAY,EAAZA,MAC3B,GAAoCC,EAAAA,EAAAA,WAAS,GAA7C,eAAON,EAAP,KAAmBO,EAAnB,KAMA,OACE,+BACE,UAACb,EAAD,YACE,SAACE,EAAD,UAAQS,EAAQ,KAEhB,SAACR,EAAD,CAAQW,QATW,WACvBD,GAAc,SAAAE,GAAI,OAAKA,CAAL,GACnB,EAOwCC,KAAK,SAAxC,SACGV,EAAa,OAAS,UAGzB,UAACF,EAAD,CAAaE,WAAYA,EAAzB,WACE,UAACC,EAAD,CAAUD,WAAYA,EAAtB,iBAAuCI,EAAKO,SAA5C,OAECX,IAAc,UAACE,EAAD,iBAAgBE,EAAKQ,iBAK7C,C,oHChCYC,EAAUlB,EAAAA,EAAAA,KAAH,6FAMPmB,EAAYnB,EAAAA,EAAAA,IAAH,qEAKToB,EAAQpB,EAAAA,EAAAA,GAAH,mJASLD,EAAcC,EAAAA,EAAAA,IAAH,uIAQXqB,GAAcrB,EAAAA,EAAAA,GAAOsB,EAAAA,GAAPtB,CAAH,oN,oCClBlBuB,EAASC,EACTC,EAAYC,EACZC,EAAWC,EACXC,EAASC,KAAKC,MAAMD,KAAKD,SAAWF,EAASK,QAC7CC,EAAcH,KAAKC,MAAMD,KAAKD,SAAWJ,EAAUO,QACnDE,EAAWJ,KAAKC,MAAMD,KAAKD,SAAWN,EAAOS,QAwBnD,EAtBa,WACX,OACE,UAACd,EAAD,YACE,SAACE,EAAD,uBACA,UAACD,EAAD,YACE,UAACpB,EAAD,YACE,SAACsB,EAAD,CAAac,GAAG,QAAhB,0BACA,SAAC3B,EAAA,EAAD,CAAMC,KAAMkB,EAASE,GAASnB,MAAOmB,QAEvC,UAAC9B,EAAD,YACE,SAACsB,EAAD,CAAac,GAAG,MAAhB,wBACA,SAAC3B,EAAA,EAAD,CAAMC,KAAMc,EAAOW,GAAWxB,MAAOwB,QAEvC,UAACnC,EAAD,YACE,SAACsB,EAAD,CAAac,GAAG,SAAhB,2BACA,SAAC3B,EAAA,EAAD,CAAMC,KAAMgB,EAAUQ,GAAcvB,MAAOuB,YAKpD,C","sources":["components/Card/Card.styled.jsx","components/Card/Card.jsx","pages/Home/Home.styled.jsx","pages/Home/Home.jsx"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const CardWrapper = styled.li`\n  position: relative;\n  display: flex;\n  padding: 20px;\n  gap: 30px;\n  border: 1px solid #ff4400bd;\n  border-radius: 14px;\n  align-items: start;\n`;\n\nexport const Count = styled.p`\n  position: absolute;\n  top: 8px;\n  left: 10px;\n  align-self: center;\n  font-size: 18px;\n  background-color: #ffffff;\n  color: #212112;\n`;\n\nexport const Button = styled.button`\n  display: block;\n  cursor: pointer;\n  font-size: 18px;\n  background-color: #ff4400bd;\n  color: #fff;\n  border: none;\n  border-radius: 12px;\n  padding: 8px 18px;\n  overflow: none;\n  max-height: 32px;\n  text-align: center;\n  width: 100px;\n  margin-left: 25px;\n`;\n\nexport const TextWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 20px;\n  border-radius: 20px;\n\n  padding: ${props => (props.showAnswer ? '20px' : '0')};\n  background-color: ${props => (props.showAnswer ? 'lightgrey' : '#fff')};\n`;\n\nexport const CardText = styled.h3`\n  font-family: 'Montserrat';\n  font-style: normal;\n  font-weight: ${props => (props.showAnswer ? '700' : '500')};\n  font-size: 18px;\n  text-transform: uppercase;\n  max-width: 600px;\n  text-align: ${props => (props.showAnswer ? 'center' : 'start')};\n`;\n\nexport const CardAnswer = styled.div`\n  font-family: 'Montserrat';\n  font-style: normal;\n  font-weight: 500;\n  font-size: 20px;\n  line-height: 28px;\n  max-width: 600px;\n  text-align: center;\n`;\n","import { useState } from 'react';\n\nimport {\n  CardWrapper,\n  CardText,\n  Button,\n  TextWrapper,\n  CardAnswer,\n  Count,\n} from './Card.styled';\n\nexport const Card = ({ data, index }) => {\n  const [showAnswer, setShowAnswer] = useState(false);\n\n  const handleShowAnswer = () => {\n    setShowAnswer(prev => !prev);\n  };\n\n  return (\n    <>\n      <CardWrapper>\n        <Count>{index + 1}</Count>\n\n        <Button onClick={handleShowAnswer} type=\"button\">\n          {showAnswer ? 'hide' : 'show'}\n        </Button>\n\n        <TextWrapper showAnswer={showAnswer}>\n          <CardText showAnswer={showAnswer}> Q: {data.question} </CardText>\n\n          {showAnswer && <CardAnswer>A: {data.answer}</CardAnswer>}\n        </TextWrapper>\n      </CardWrapper>\n    </>\n  );\n};\n","import styled from '@emotion/styled';\nimport { Link } from 'react-router-dom';\n\nexport const Section = styled.main`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`;\n\nexport const Container = styled.div`\n  display: flex;\n  flex-direction: column;\n`;\n\nexport const Title = styled.h1`\n  margin-top: 0;\n  margin-bottom: 24px;\n  color: black;\n  font-weight: 500;\n  font-size: 30px;\n  align-self: center;\n`;\n\nexport const CardWrapper = styled.div`\n  width: 770px;\n  margin-bottom: 24px;\n  padding: 20px;\n  border: 1px solid black;\n  border-radius: 10px;\n`;\n\nexport const SectionLink = styled(Link)`\n  padding: 8px 16px;\n  display: block;\n  text-decoration: none;\n  color: black;\n  font-weight: 500;\n  font-size: 30px;\n  margin-bottom: 5px;\n\n  &:hover {\n    color: orange;\n  }\n`;\n","import { Card } from 'components/Card/Card';\n\nimport {\n  Section,\n  Container,\n  CardWrapper,\n  SectionLink,\n  Title,\n} from './Home.styled';\nimport questionHTML from '../../json/questionHTML';\nimport questionREACT from '../../json/questionREACT';\nimport questionJS from '../../json/questionJS';\n\nconst dataJS = questionJS;\nconst dataREACT = questionREACT;\nconst dataHTML = questionHTML;\nconst random = Math.floor(Math.random() * dataHTML.length);\nconst randomREACT = Math.floor(Math.random() * dataREACT.length);\nconst randomJS = Math.floor(Math.random() * dataJS.length);\n\nconst Home = () => {\n  return (\n    <Section>\n      <Title>Welcome</Title>\n      <Container>\n        <CardWrapper>\n          <SectionLink to=\"/html\"> go to HTML</SectionLink>\n          <Card data={dataHTML[random]} index={random} />\n        </CardWrapper>\n        <CardWrapper>\n          <SectionLink to=\"/js\"> go to JS</SectionLink>\n          <Card data={dataJS[randomJS]} index={randomJS} />\n        </CardWrapper>\n        <CardWrapper>\n          <SectionLink to=\"/react\"> go to REACT</SectionLink>\n          <Card data={dataREACT[randomREACT]} index={randomREACT} />\n        </CardWrapper>\n      </Container>\n    </Section>\n  );\n};\n\nexport default Home;\n"],"names":["CardWrapper","styled","Count","Button","TextWrapper","props","showAnswer","CardText","CardAnswer","Card","data","index","useState","setShowAnswer","onClick","prev","type","question","answer","Section","Container","Title","SectionLink","Link","dataJS","questionJS","dataREACT","questionREACT","dataHTML","questionHTML","random","Math","floor","length","randomREACT","randomJS","to"],"sourceRoot":""}